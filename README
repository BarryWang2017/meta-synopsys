This layer provides support for Synopsys / ARC CPU
==================================================


Supported SoCs / MACHINE names
==============================
To be done

Sources
=======

- meta-synopsys
URI: git://github.com/foss-for-synopsys-dwc-arc-processors/meta-synopsys.git
URI: http://github.com/foss-for-synopsys-dwc-arc-processors/meta-synopsys.git
Branch: morty

- openembedded-core
URI: git://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-core.git
URI: http://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-core.git
Branch: morty

- repo's manifest
URI: git://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-manifest.git
URI: http://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-manifest.git
Branch: morty

Dependencies
============

This Layer depends on :
- meta-openembedded
URI: git://git.openembedded.org/meta-openembedded
URI: http://cgit.openembedded.org/meta-openembedded/
Branch: morty


Build procedure
===============

To build an image from Synopsys layers, you can use the manifest file provided:
http://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-manifest/tree/morty

Otherwise, if you are not familiar with repo tool, you can clone every
repository by hand:

1. Clone openembedded-core git repository with the proper branch ready
git clone -b morty http://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-oe-core.git oe

2. Clone meta-openembedded git repository with the proper branch ready
git clone -b morty http://git.openembedded.org/meta-openembedded

3. Clone meta-synopsys layer with the proper branch ready
git clone -b morty http://github.com/foss-for-synopsys-dwc-arc-processors/meta-synopsys.git

5. Enter the openembedded-core directory
cd oe

6. Clone the bitbake project
git clone -b 1.32 http://git.openembedded.org/bitbake

7. Initialize build directory by using template files
export TEMPLATECONF=../meta-synopsys/conf
source oe-init-build-env build

8. Build synopsys image (currently, the rootfs is used as initramfs)
bitbake virtual/kernel
